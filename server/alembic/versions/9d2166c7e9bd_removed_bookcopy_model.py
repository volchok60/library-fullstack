"""Removed BookCopy model.

Revision ID: 9d2166c7e9bd
Revises: d179c201eeac
Create Date: 2025-07-31 10:22:08.327872

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9d2166c7e9bd'
down_revision: Union[str, Sequence[str], None] = 'd179c201eeac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bookcopy')
    op.add_column('book', sa.Column('imprint', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True))
    op.add_column('book', sa.Column('due_back', sa.DateTime(), nullable=True))
    op.add_column('book', sa.Column('status', sa.Integer(), nullable=False))
    op.add_column('book', sa.Column('isbn', sqlmodel.sql.sqltypes.AutoString(length=13), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('book', 'isbn')
    op.drop_column('book', 'status')
    op.drop_column('book', 'due_back')
    op.drop_column('book', 'imprint')
    op.create_table('bookcopy',
    sa.Column('imprint', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('due_back', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('isbn', sa.VARCHAR(length=13), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('book_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], name=op.f('bookcopy_book_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('bookcopy_pkey'))
    )
    # ### end Alembic commands ###
